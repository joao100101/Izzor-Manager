// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();



$teste: (
  50: #FAFAFA,
  100: #F5F5F5,
  200: #EEEEEE,
  300: #E0E0E0,
  400: #BDBDBD,
  500: #9E9E9E,
  600: #757575,
  700: #616161,
  800: #424242,
  900: #212121,
  A100: #82B1FF,
  A200: #448AFF,
  A400: #2979FF,
  A700: #2962FF,
  contrast: (50: #FAFAFA,
    100: #F5F5F5,
    200: #EEEEEE,
    300: #E0E0E0,
    400: #BDBDBD,
    500: #FAFAFA,
    600: #757575,
    700: #616161,
    800: #424242,
    900: #212121,
    A100: #82B1FF,
    A200: #448AFF,
    A400: #2979FF,
    A700: #2962FF)
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Teste-primary: mat.define-palette($teste);
$Teste-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Teste-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Teste-theme: mat.define-light-theme((color: (primary: $Teste-primary,
        accent: $Teste-accent,
        warn: $Teste-warn,
      )));


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Teste-theme);